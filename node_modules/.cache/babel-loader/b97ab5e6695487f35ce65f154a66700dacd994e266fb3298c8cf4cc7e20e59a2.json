{"ast":null,"code":"import { constants } from \"../constant\";\nexport const getAllTestType = async setError => {\n  try {\n    const data = await fetch(constants.get_all_test_type_url);\n    const jsonData = await (data === null || data === void 0 ? void 0 : data.json());\n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\nexport const createTestType = async (setError, setShowErrorModal, setTestTypeData, setIsTypeCreation, data) => {\n  try {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const fetchedData = await fetch(constants.create_test_type_url, requestOptions);\n    const res = await (fetchedData === null || fetchedData === void 0 ? void 0 : fetchedData.json());\n    if (!(res !== null && res !== void 0 && res.success)) {\n      setShowErrorModal(true);\n      setError(res === null || res === void 0 ? void 0 : res.message);\n    } else {\n      let res = await getAllTestType(setError);\n      if (!(res !== null && res !== void 0 && res.success)) {\n        setShowErrorModal(true);\n        setError(res === null || res === void 0 ? void 0 : res.message);\n      }\n      setIsTypeCreation(false);\n      setTestTypeData(res === null || res === void 0 ? void 0 : res.data);\n    }\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};","map":{"version":3,"names":["constants","getAllTestType","setError","data","fetch","get_all_test_type_url","jsonData","json","error","console","log","createTestType","setShowErrorModal","setTestTypeData","setIsTypeCreation","requestOptions","method","headers","body","JSON","stringify","fetchedData","create_test_type_url","res","success","message"],"sources":["C:/Users/abdul/react-task/react-task/Frontend/src/utils/functions/testType.js"],"sourcesContent":["import { constants } from \"../constant\";\nexport const getAllTestType = async (setError) => {\n  try {\n    const data = await fetch(constants.get_all_test_type_url);\n    const jsonData = await data?.json();\n\n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\n\nexport const createTestType = async (\n  setError,\n  setShowErrorModal,\n  setTestTypeData,\n  setIsTypeCreation,\n  data\n) => {\n  try {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n\n    const fetchedData = await fetch(\n      constants.create_test_type_url,\n      requestOptions\n    );\n    const res = await fetchedData?.json();\n    if (!res?.success) {\n      setShowErrorModal(true);\n      setError(res?.message);\n    } else {\n      let res = await getAllTestType(setError);\n      if (!res?.success) {\n        setShowErrorModal(true);\n        setError(res?.message);\n      }\n      setIsTypeCreation(false);\n      setTestTypeData(res?.data);\n    }\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,OAAO,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACJ,SAAS,CAACK,qBAAqB,CAAC;IACzD,MAAMC,QAAQ,GAAG,OAAMH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,IAAI,CAAC,CAAC;IAEnC,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBN,QAAQ,CAAC,uBAAuB,CAAC;EACnC;AACF,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAC5BT,QAAQ,EACRU,iBAAiB,EACjBC,eAAe,EACfC,iBAAiB,EACjBX,IAAI,KACD;EACH,IAAI;IACF,MAAMY,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,IAAI;IAC3B,CAAC;IAED,MAAMkB,WAAW,GAAG,MAAMjB,KAAK,CAC7BJ,SAAS,CAACsB,oBAAoB,EAC9BP,cACF,CAAC;IACD,MAAMQ,GAAG,GAAG,OAAMF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEd,IAAI,CAAC,CAAC;IACrC,IAAI,EAACgB,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEC,OAAO,GAAE;MACjBZ,iBAAiB,CAAC,IAAI,CAAC;MACvBV,QAAQ,CAACqB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,OAAO,CAAC;IACxB,CAAC,MAAM;MACL,IAAIF,GAAG,GAAG,MAAMtB,cAAc,CAACC,QAAQ,CAAC;MACxC,IAAI,EAACqB,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEC,OAAO,GAAE;QACjBZ,iBAAiB,CAAC,IAAI,CAAC;QACvBV,QAAQ,CAACqB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,OAAO,CAAC;MACxB;MACAX,iBAAiB,CAAC,KAAK,CAAC;MACxBD,eAAe,CAACU,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEpB,IAAI,CAAC;IAC5B;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBN,QAAQ,CAAC,uBAAuB,CAAC;EACnC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}