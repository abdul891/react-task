{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul\\\\react-task\\\\react-task\\\\Frontend\\\\src\\\\comnponents\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport Header from \"./Header\";\nimport styles from \"./UserForm.module.css\";\nimport { createTestType } from \"../utils/functions/testType\";\nimport { createTest, updateTest } from \"../utils/functions/test\";\nimport { useGetTestType } from \"../utils/hooks/useGetTestType\";\nimport { useSetTestData } from \"../utils/hooks/useSetTestData\";\nimport ErrorPopup from \"./Popup/ErrorPopup\";\nimport { Button, Stack } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserForm() {\n  _s();\n  var _userToUpdate$data, _userToUpdate$data2, _userToUpdate$data3, _userToUpdate$data4, _userToUpdate$data5;\n  const {\n    testTypeData,\n    setTestTypeData,\n    error,\n    setError\n  } = useGetTestType();\n  const [testType, setTestType] = useState(\"\");\n  const [isTypeCreation, setIsTypeCreation] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id,\n    key,\n    userToUpdate,\n    isNotUpdateMode\n  } = useSetTestData(setError);\n  const initialValues = {\n    test_name: userToUpdate ? userToUpdate === null || userToUpdate === void 0 ? void 0 : (_userToUpdate$data = userToUpdate.data) === null || _userToUpdate$data === void 0 ? void 0 : _userToUpdate$data.test_name : \"\",\n    tester_email: userToUpdate ? userToUpdate === null || userToUpdate === void 0 ? void 0 : (_userToUpdate$data2 = userToUpdate.data) === null || _userToUpdate$data2 === void 0 ? void 0 : _userToUpdate$data2.tester_email : \"\",\n    test_type: userToUpdate ? userToUpdate === null || userToUpdate === void 0 ? void 0 : (_userToUpdate$data3 = userToUpdate.data) === null || _userToUpdate$data3 === void 0 ? void 0 : _userToUpdate$data3.test_type : \"\",\n    tester_mobile_no: userToUpdate ? userToUpdate === null || userToUpdate === void 0 ? void 0 : (_userToUpdate$data4 = userToUpdate.data) === null || _userToUpdate$data4 === void 0 ? void 0 : _userToUpdate$data4.tester_mobile_no : \"\",\n    tester_alternative_no: userToUpdate ? userToUpdate === null || userToUpdate === void 0 ? void 0 : (_userToUpdate$data5 = userToUpdate.data) === null || _userToUpdate$data5 === void 0 ? void 0 : _userToUpdate$data5.tester_alternative_no : \"\"\n  };\n  const validationSchema = Yup.object({\n    test_name: Yup.string().required(\"Required\").matches(/^[A-Za-z\\s]+$/, \"Only letters and spaces are allowed\"),\n    tester_email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n    tester_mobile_no: Yup.string().matches(/^\\d{10}$/, \"Mobile number must be 10 digits\").required(\"Required\"),\n    tester_alternative_no: Yup.string().matches(/^\\d{10}$/, \"Alternative number must be 10 digits\").notOneOf([Yup.ref(\"tester_mobile_no\")], \"Alternative number should not be the same as Mobile No\").required(\"Required\"),\n    test_type: Yup.string().required(\"Required\")\n  });\n  const handleSubmit = async values => {\n    if (isNotUpdateMode || id) {\n      if (isNotUpdateMode) {\n        let res = await createTest(setError, setShowErrorModal, values);\n        if (res) {\n          navigate(\"/dashboard\");\n        }\n      } else {\n        let res = await updateTest(setError, setShowErrorModal, values, id);\n        res && navigate(\"/dashboard\");\n      }\n    }\n  };\n  const handleCreateType = async data => {\n    await createTestType(setError, setShowErrorModal, setTestTypeData, setIsTypeCreation, data);\n    setTestType(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container mt-4 ${styles.user_form_container}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", isNotUpdateMode ? \"Create Test\" : \"Update Test\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form_container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group justify mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"test_name\",\n              children: \"Test Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"test_name\",\n              name: \"test_name\",\n              className: \"form-control\",\n              placeholder: \"Enter Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"test_name\",\n              component: \"div\",\n              className: \"text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tester_email\",\n              children: \"Tester Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              id: \"tester_email\",\n              name: \"tester_email\",\n              className: \"form-control\",\n              disabled: !isNotUpdateMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"tester_email\",\n              component: \"div\",\n              className: \"text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tester_mobile_no\",\n              children: \"Mobile:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"number\",\n              id: \"tester_mobile_no\",\n              name: \"tester_mobile_no\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"tester_mobile_no\",\n              component: \"div\",\n              className: \"text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tester_alternative_no\",\n              children: \"Alternate Mo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"number\",\n              id: \"tester_alternative_no\",\n              name: \"tester_alternative_no\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"tester_alternative_no\",\n              component: \"div\",\n              className: \"text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Test type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              name: \"test_type\",\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"---- Select ----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), (testTypeData === null || testTypeData === void 0 ? void 0 : testTypeData.length) > 0 ? testTypeData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item._id,\n                children: item.test_type\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 23\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"test_type\",\n              component: \"div\",\n              className: \"text-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), isNotUpdateMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.type_section_title,\n              onClick: () => setIsTypeCreation(true),\n              children: \"Create more test type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), isTypeCreation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.type_section,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                className: \"form-control\",\n                value: testType,\n                onChange: e => setTestType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"horizontal\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.type_section_button,\n                  onClick: () => handleCreateType({\n                    test_type: testType\n                  }),\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.type_section_button,\n                  onClick: () => setIsTypeCreation(false),\n                  children: \"Hide\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"horizontal\",\n            gap: 3,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"secondary\",\n              children: isNotUpdateMode ? \"Create Test\" : \"Update Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => navigate(\"/dashboard\"),\n              variant: \"outline-danger\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorPopup, {\n      showErrorModal: showErrorModal,\n      setShowErrorModal: setShowErrorModal,\n      ErrorTitle: \"Error\",\n      ErrorMessage: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(UserForm, \"kJ4I0Qw3XROJr588890SKa8+i6k=\", false, function () {\n  return [useGetTestType, useNavigate, useSetTestData];\n});\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useNavigate","Formik","Form","Field","ErrorMessage","Yup","Header","styles","createTestType","createTest","updateTest","useGetTestType","useSetTestData","ErrorPopup","Button","Stack","jsxDEV","_jsxDEV","UserForm","_s","_userToUpdate$data","_userToUpdate$data2","_userToUpdate$data3","_userToUpdate$data4","_userToUpdate$data5","testTypeData","setTestTypeData","error","setError","testType","setTestType","isTypeCreation","setIsTypeCreation","showErrorModal","setShowErrorModal","navigate","id","key","userToUpdate","isNotUpdateMode","initialValues","test_name","data","tester_email","test_type","tester_mobile_no","tester_alternative_no","validationSchema","object","string","required","matches","email","notOneOf","ref","handleSubmit","values","res","handleCreateType","children","fileName","_jsxFileName","lineNumber","columnNumber","className","user_form_container","enableReinitialize","onSubmit","form_container","htmlFor","type","name","placeholder","component","disabled","as","length","map","item","value","_id","type_section_title","onClick","type_section","onChange","e","target","direction","type_section_button","gap","variant","ErrorTitle","_c","$RefreshReg$"],"sources":["C:/Users/abdul/react-task/react-task/Frontend/src/comnponents/UserForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Header from \"./Header\";\nimport styles from \"./UserForm.module.css\";\nimport { createTestType } from \"../utils/functions/testType\";\nimport { createTest, updateTest } from \"../utils/functions/test\";\nimport { useGetTestType } from \"../utils/hooks/useGetTestType\";\nimport { useSetTestData } from \"../utils/hooks/useSetTestData\";\nimport ErrorPopup from \"./Popup/ErrorPopup\";\nimport { Button, Stack } from \"react-bootstrap\";\n\nfunction UserForm() {\n  const { testTypeData, setTestTypeData, error, setError } = useGetTestType();\n  const [testType, setTestType] = useState(\"\");\n  const [isTypeCreation, setIsTypeCreation] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const navigate = useNavigate();\n  const { id, key, userToUpdate, isNotUpdateMode } = useSetTestData(setError);\n\n  const initialValues = {\n    test_name: userToUpdate ? userToUpdate?.data?.test_name : \"\",\n    tester_email: userToUpdate ? userToUpdate?.data?.tester_email : \"\",\n    test_type: userToUpdate ? userToUpdate?.data?.test_type : \"\",\n    tester_mobile_no: userToUpdate ? userToUpdate?.data?.tester_mobile_no : \"\",\n    tester_alternative_no: userToUpdate\n      ? userToUpdate?.data?.tester_alternative_no\n      : \"\",\n  };\n\n  const validationSchema = Yup.object({\n    test_name: Yup.string()\n      .required(\"Required\")\n      .matches(/^[A-Za-z\\s]+$/, \"Only letters and spaces are allowed\"),\n    tester_email: Yup.string()\n      .email(\"Invalid email address\")\n      .required(\"Required\"),\n    tester_mobile_no: Yup.string()\n      .matches(/^\\d{10}$/, \"Mobile number must be 10 digits\")\n      .required(\"Required\"),\n    tester_alternative_no: Yup.string()\n      .matches(/^\\d{10}$/, \"Alternative number must be 10 digits\")\n      .notOneOf(\n        [Yup.ref(\"tester_mobile_no\")],\n        \"Alternative number should not be the same as Mobile No\"\n      )\n      .required(\"Required\"),\n    test_type: Yup.string().required(\"Required\"),\n  });\n\n  const handleSubmit = async (values) => {\n    if (isNotUpdateMode || id) {\n      if (isNotUpdateMode) {\n        let res = await createTest(setError, setShowErrorModal, values);\n        if (res) {\n          navigate(\"/dashboard\");\n        }\n      } else {\n        let res = await updateTest(setError, setShowErrorModal, values, id);\n        res && navigate(\"/dashboard\");\n      }\n    }\n  };\n\n  const handleCreateType = async (data) => {\n    await createTestType(\n      setError,\n      setShowErrorModal,\n      setTestTypeData,\n      setIsTypeCreation,\n      data\n    );\n    setTestType(\"\");\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className={`container mt-4 ${styles.user_form_container}`}>\n        <h2> {isNotUpdateMode ? \"Create Test\" : \"Update Test\"}</h2>\n        <Formik\n          key={key}\n          enableReinitialize={true}\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <Form className={styles.form_container}>\n            <div className=\"form-group justify mb-3\">\n              <label htmlFor=\"test_name\">Test Name:</label>\n              <Field\n                type=\"text\"\n                id=\"test_name\"\n                name=\"test_name\"\n                className=\"form-control\"\n                placeholder=\"Enter Your Name\"\n              />\n              <ErrorMessage\n                name=\"test_name\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"tester_email\">Tester Email:</label>\n              <Field\n                type=\"email\"\n                id=\"tester_email\"\n                name=\"tester_email\"\n                className=\"form-control\"\n                disabled={!isNotUpdateMode}\n              />\n              <ErrorMessage\n                name=\"tester_email\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"tester_mobile_no\">Mobile:</label>\n              <Field\n                type=\"number\"\n                id=\"tester_mobile_no\"\n                name=\"tester_mobile_no\"\n                className=\"form-control\"\n              />\n              <ErrorMessage\n                name=\"tester_mobile_no\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n            <div className=\"form-group mb-3\">\n              <label htmlFor=\"tester_alternative_no\">Alternate Mo:</label>\n              <Field\n                type=\"number\"\n                id=\"tester_alternative_no\"\n                name=\"tester_alternative_no\"\n                className=\"form-control\"\n              />\n              <ErrorMessage\n                name=\"tester_alternative_no\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n\n            <div className=\"form-group mb-3\">\n              <label>Test type:</label>\n              <Field as=\"select\" name=\"test_type\" className=\"form-control\">\n                <option>---- Select ----</option>\n                {testTypeData?.length > 0\n                  ? testTypeData.map((item) => (\n                      <option key={item._id} value={item._id}>\n                        {item.test_type}\n                      </option>\n                    ))\n                  : null}\n              </Field>\n              <ErrorMessage\n                name=\"test_type\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n            {isNotUpdateMode ? (\n              <div className=\"form-group mb-3\">\n                <p\n                  className={styles.type_section_title}\n                  onClick={() => setIsTypeCreation(true)}\n                >\n                  Create more test type:\n                </p>\n                {isTypeCreation && (\n                  <div className={styles.type_section}>\n                    <Field\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={testType}\n                      onChange={(e) => setTestType(e.target.value)}\n                    />\n\n                    <Stack direction=\"horizontal\">\n                      <p\n                        className={styles.type_section_button}\n                        onClick={() =>\n                          handleCreateType({ test_type: testType })\n                        }\n                      >\n                        Create\n                      </p>\n                      <div className=\"vr\" />\n                      <p\n                        className={styles.type_section_button}\n                        onClick={() => setIsTypeCreation(false)}\n                      >\n                        Hide\n                      </p>\n                    </Stack>\n                  </div>\n                )}\n              </div>\n            ) : null}\n\n            <Stack direction=\"horizontal\" gap={3}>\n              <Button type=\"submit\" variant=\"secondary\">\n                {isNotUpdateMode ? \"Create Test\" : \"Update Test\"}\n              </Button>\n              <div className=\"vr\" />\n              <Button\n                onClick={() => navigate(\"/dashboard\")}\n                variant=\"outline-danger\"\n              >\n                Back\n              </Button>\n            </Stack>\n          </Form>\n        </Formik>\n      </div>\n      <ErrorPopup\n        showErrorModal={showErrorModal}\n        setShowErrorModal={setShowErrorModal}\n        ErrorTitle={\"Error\"}\n        ErrorMessage={error}\n      />\n    </div>\n  );\n}\n\nexport default UserForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}