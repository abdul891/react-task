{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAllTestType } from \"../functions/testType\";\nexport const useGetTestType = () => {\n  _s();\n  const [testTypeData, setTestTypeData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getTestTypeData();\n  }, []);\n  async function getTestTypeData() {\n    try {\n      const data = await getAllTestType(setError);\n      if (data !== null && data !== void 0 && data.success) {\n        setTestTypeData(data === null || data === void 0 ? void 0 : data.data);\n      } else {\n        setError(data === null || data === void 0 ? void 0 : data.message);\n      }\n    } catch (error) {\n      console.log(error);\n      setError(\"Something went wrong!\");\n    }\n  }\n  return {\n    testTypeData,\n    setTestTypeData,\n    error,\n    setError\n  };\n};\n_s(useGetTestType, \"669aQZxS9CwKSr46cpY6/FDh0qM=\");","map":{"version":3,"names":["useEffect","useState","getAllTestType","useGetTestType","_s","testTypeData","setTestTypeData","error","setError","getTestTypeData","data","success","message","console","log"],"sources":["C:/Users/abdul/react-task/react-task/Frontend/src/utils/hooks/useGetTestType.js"],"sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport { getAllTestType } from \"../functions/testType\";\nexport const useGetTestType =  () => {\n    const [testTypeData, setTestTypeData] = useState([]);\n  \n    const [error, setError] = useState(null);\n    useEffect(() => {\n      getTestTypeData();\n    }, []);\n    async function getTestTypeData() {\n      try {\n        const data = await getAllTestType(setError);\n        if (data?.success) {\n          \n          setTestTypeData(data?.data);\n        } else {\n          setError(data?.message);\n        }\n      } catch (error) {\n        console.log(error);\n        setError(\"Something went wrong!\");\n      }\n    }\n  \n    return {\n      testTypeData,\n      setTestTypeData,\n      error,\n      setError,\n    };\n  };\n  "],"mappings":";AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAO,MAAMC,cAAc,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxCD,SAAS,CAAC,MAAM;IACdS,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,eAAeA,eAAeA,CAAA,EAAG;IAC/B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAACM,QAAQ,CAAC;MAC3C,IAAIE,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,OAAO,EAAE;QAEjBL,eAAe,CAACI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAAC;MAC7B,CAAC,MAAM;QACLF,QAAQ,CAACE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,OAAO,CAAC;MACzB;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClBC,QAAQ,CAAC,uBAAuB,CAAC;IACnC;EACF;EAEA,OAAO;IACLH,YAAY;IACZC,eAAe;IACfC,KAAK;IACLC;EACF,CAAC;AACH,CAAC;AAACJ,EAAA,CA5BSD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}