{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getTest } from \"../functions/test\";\nexport const useSetTestData = setError => {\n  _s();\n  const [key, setKey] = useState(0);\n  const [userToUpdate, setUserToUpdate] = useState(null);\n  const {\n    id\n  } = useParams();\n  const isNotUpdateMode = !id;\n  const someAsyncFunction = async () => {\n    let data = !isNotUpdateMode ? await getTest(setError, id) : \"\";\n    setUserToUpdate(data);\n  };\n  useEffect(() => {\n    someAsyncFunction();\n    setKey(prevKey => prevKey + 1);\n  }, [id]);\n  return {\n    key,\n    userToUpdate,\n    setKey,\n    setUserToUpdate,\n    isNotUpdateMode,\n    id\n  };\n};\n_s(useSetTestData, \"KiWoLKALTy1Qi3dQsVnPWjZ+vJU=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"names":["useEffect","useState","useParams","getTest","useSetTestData","setError","_s","key","setKey","userToUpdate","setUserToUpdate","id","isNotUpdateMode","someAsyncFunction","data","prevKey"],"sources":["C:/Users/abdul/react-task/react-task/Frontend/src/utils/hooks/useSetTestData.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getTest } from \"../functions/test\";\n\nexport const useSetTestData = (setError) => {\n  const [key, setKey] = useState(0);\n  const [userToUpdate, setUserToUpdate] = useState(null);\n  const { id } = useParams();\n  const isNotUpdateMode = !id;\n  const someAsyncFunction = async () => {\n    let data = !isNotUpdateMode ? await getTest(setError, id) : \"\";\n    setUserToUpdate(data);\n  };\n  useEffect(() => {\n    someAsyncFunction();\n    setKey((prevKey) => prevKey + 1);\n  }, [id]);\n\n  return {\n    key,\n    userToUpdate,\n    setKey,\n    setUserToUpdate,\n    isNotUpdateMode,\n    id,\n  };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAO,MAAMC,cAAc,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM;IAAEU;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,eAAe,GAAG,CAACD,EAAE;EAC3B,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIC,IAAI,GAAG,CAACF,eAAe,GAAG,MAAMT,OAAO,CAACE,QAAQ,EAAEM,EAAE,CAAC,GAAG,EAAE;IAC9DD,eAAe,CAACI,IAAI,CAAC;EACvB,CAAC;EACDd,SAAS,CAAC,MAAM;IACda,iBAAiB,CAAC,CAAC;IACnBL,MAAM,CAAEO,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;EAClC,CAAC,EAAE,CAACJ,EAAE,CAAC,CAAC;EAER,OAAO;IACLJ,GAAG;IACHE,YAAY;IACZD,MAAM;IACNE,eAAe;IACfE,eAAe;IACfD;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAtBWF,cAAc;EAAA,QAGVF,SAAS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}