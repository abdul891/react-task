{"ast":null,"code":"import { constants } from \"../constant\";\nexport const createTest = async (setError, setShowErrorModal, data) => {\n  try {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const res = await fetch(constants.create_test_url, requestOptions);\n    const jsonData = await (res === null || res === void 0 ? void 0 : res.json());\n    if (!(jsonData !== null && jsonData !== void 0 && jsonData.success)) {\n      setShowErrorModal(true);\n      setError(jsonData === null || jsonData === void 0 ? void 0 : jsonData.message);\n    }\n    return jsonData === null || jsonData === void 0 ? void 0 : jsonData.success;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\nexport const updateTest = async (setError, setShowErrorModal, data, id) => {\n  try {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    const res = await fetch(`${constants.update_test_url}${id}`, requestOptions);\n    const jsonData = await (res === null || res === void 0 ? void 0 : res.json());\n    if (!(jsonData !== null && jsonData !== void 0 && jsonData.success)) {\n      setShowErrorModal(true);\n      setError(jsonData === null || jsonData === void 0 ? void 0 : jsonData.message);\n    }\n    return jsonData === null || jsonData === void 0 ? void 0 : jsonData.success;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\nexport const getTest = async (setError, id) => {\n  try {\n    const res = await fetch(`${constants.get_test_url}${id}`);\n    const jsonData = await (res === null || res === void 0 ? void 0 : res.json());\n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\nexport const getAllTest = async (setError, setIsLoading) => {\n  try {\n    const data = await fetch(constants.get_all_test_url);\n    const jsonData = await (data === null || data === void 0 ? void 0 : data.json());\n    setIsLoading(false);\n    if (!(jsonData !== null && jsonData !== void 0 && jsonData.success)) {\n      setError(jsonData === null || jsonData === void 0 ? void 0 : jsonData.message);\n    }\n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\nexport const deleteTest = async (id, setError) => {\n  try {\n    const data = await fetch(`${constants.delte_tes_url}${id}`, {\n      method: \"DELETE\"\n    });\n    const jsonData = await (data === null || data === void 0 ? void 0 : data.json());\n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};","map":{"version":3,"names":["constants","createTest","setError","setShowErrorModal","data","requestOptions","method","headers","body","JSON","stringify","res","fetch","create_test_url","jsonData","json","success","message","error","console","log","updateTest","id","update_test_url","getTest","get_test_url","getAllTest","setIsLoading","get_all_test_url","deleteTest","delte_tes_url"],"sources":["C:/Users/abdul/react-task/react-task/Frontend/src/utils/functions/test.js"],"sourcesContent":["import { constants } from \"../constant\";\n\nexport const createTest = async (setError, setShowErrorModal, data) => {\n  try {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n\n    const res = await fetch(constants.create_test_url, requestOptions);\n    const jsonData = await res?.json();\n    if (!jsonData?.success) {\n      setShowErrorModal(true);\n      setError(jsonData?.message);\n    }\n    return jsonData?.success;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\nexport const updateTest = async (setError, setShowErrorModal, data, id) => {\n  try {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n\n    const res = await fetch(\n      `${constants.update_test_url}${id}`,\n      requestOptions\n    );\n    const jsonData = await res?.json();\n    if (!jsonData?.success) {\n      setShowErrorModal(true);\n      setError(jsonData?.message);\n    }\n    return jsonData?.success;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\nexport const getTest = async (setError, id) => {\n  try {\n    const res = await fetch(`${constants.get_test_url}${id}`);\n    const jsonData = await res?.json();\n \n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\n\nexport const getAllTest = async (setError, setIsLoading) => {\n  try {\n    const data = await fetch(constants.get_all_test_url);\n    const jsonData = await data?.json();\n    setIsLoading(false);\n\n    if (!jsonData?.success) {\n      setError(jsonData?.message);\n    }\n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\n\nexport const deleteTest = async (id, setError) => {\n  try {\n    const data = await fetch(`${constants.delte_tes_url}${id}`, {\n      method: \"DELETE\",\n    });\n    const jsonData = await data?.json();\n\n    return jsonData;\n  } catch (error) {\n    console.log(error);\n    setError(\"Something went wrong!\");\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}